<Window x:Class="NavegadorWeb.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NavegadorWeb"
        xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        mc:Ignorable="d"
        Title="Aurora Browser" Height="768" Width="1024"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        SourceInitialized="MainWindow_SourceInitialized"
        StateChanged="MainWindow_StateChanged">

    <Window.Resources>
        <Color x:Key="DefaultBrowserBackgroundColor">#282c34</Color> <SolidColorBrush x:Key="DefaultBrowserBackgroundBrush" Color="{StaticResource DefaultBrowserBackgroundColor}"/>

        <Color x:Key="DefaultBrowserForegroundColor">#abb2bf</Color> <SolidColorBrush x:Key="DefaultBrowserForegroundBrush" Color="{StaticResource DefaultBrowserForegroundColor}"/>

        <Color x:Key="GeminiBackgroundColor">#343a40</Color> <SolidColorBrush x:Key="GeminiBackgroundBrush" Color="{StaticResource GeminiBackgroundColor}"/>

        <Color x:Key="GeminiForegroundColor">#61afef</Color> <SolidColorBrush x:Key="GeminiForegroundBrush" Color="{StaticResource GeminiForegroundColor}"/>

        <Color x:Key="BrowserBackgroundColor" x:Shared="False">#282c34</Color>
        <SolidColorBrush x:Key="BrowserBackgroundBrush" x:Shared="False" Color="{DynamicResource BrowserBackgroundColor}"/>

        <Color x:Key="BrowserForegroundColor" x:Shared="False">#abb2bf</Color>
        <SolidColorBrush x:Key="BrowserForegroundBrush" x:Shared="False" Color="{DynamicResource BrowserForegroundColor}"/>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource BrowserForegroundColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3a3e47"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#1f2227"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#1a1a1a"/>
            <Setter Property="Foreground" Value="{DynamicResource BrowserForegroundColor}"/>
            <Setter Property="BorderBrush" Value="#333333"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="CaretBrush" Value="{DynamicResource BrowserForegroundColor}"/>
        </Style>

        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid>
                            <Border Name="Border"
                                    Margin="0,0,2,0"
                                    Background="{DynamicResource BrowserBackgroundBrush}"
                                    BorderBrush="{DynamicResource BrowserBackgroundBrush}"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="5,5,0,0">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="12,2,12,2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource BrowserBackgroundColor}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BrowserForegroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#444a54"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SwitchToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Left">
                            <Border x:Name="OuterBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="10"
                                    Width="40"
                                    Height="20"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"/>
                            <Ellipse x:Name="ToggleThumb"
                                     Fill="{TemplateBinding Foreground}"
                                     Width="16"
                                     Height="16"
                                     HorizontalAlignment="Left"
                                     Margin="2,0,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="OuterBorder" Property="Background" Value="#28a745"/>
                                <Setter TargetName="ToggleThumb" Property="HorizontalAlignment" Value="Right"/>
                                <Setter TargetName="ToggleThumb" Property="Margin" Value="0,0,2,0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="OuterBorder" Property="Background" Value="#dc3545"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#3a3e47"/>
                                <Setter Property="Foreground" Value="{DynamicResource BrowserForegroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#444a54"/>
                                <Setter Property="Foreground" Value="{DynamicResource BrowserForegroundColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource BrowserForegroundColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Border Background="{DynamicResource BrowserBackgroundBrush}"
            CornerRadius="10"
            BorderBrush="{DynamicResource BrowserForegroundColor}"
            BorderThickness="1">
        <Grid x:Name="mainGrid" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> <RowDefinition Height="Auto"/> <RowDefinition Height="*"/>    </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" x:Name="TitleBarGrid"
                  Background="{DynamicResource BrowserBackgroundBrush}"
                  MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image Source="icono.ico" Width="16" Height="16" Margin="5,0,0,0" VerticalAlignment="Center" Grid.Column="0"/>
                <TextBlock x:Name="WindowTitleText"
                           Text="Aurora Browser"
                           Grid.Column="1"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Margin="5,0,0,0"
                           Foreground="{DynamicResource BrowserForegroundColor}"
                           FontWeight="Bold"/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="4">
                    <Button x:Name="MinimizeButton" Content="—" Click="MinimizeButton_Click"
                            ToolTip="Minimizar" Style="{StaticResource WindowControlButton}"/>
                    <Button x:Name="MaximizeRestoreButton" Content="🗖" Click="MaximizeRestoreButton_Click"
                            ToolTip="Maximizar / Restaurar" Style="{StaticResource WindowControlButton}"/>
                    <Button x:Name="CloseButton" Content="✕" Click="CloseButton_Click"
                            ToolTip="Cerrar" Style="{StaticResource WindowCloseButton}"/>
                </StackPanel>
            </Grid>

            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="5">
                <Button Content="←" Click="GoBack_Click" ToolTip="Ir atrás" FontWeight="Bold"/>
                <Button Content="→" Click="GoForward_Click" ToolTip="Ir adelante" FontWeight="Bold"/>
                <Button Content="↻" Command="{Binding ReloadCommand}" ToolTip="Recargar página" FontWeight="Bold"/>
                <Button Content="🏠" Click="HomeButton_Click" ToolTip="Ir a la página de inicio" FontWeight="Bold"/>
                <Button Content="🔍" Command="{Binding ToggleFindBarCommand}" ToolTip="Buscar en la página" FontWeight="Bold"/>
                <Button Content="⚙️" Click="SettingsButton_Click" ToolTip="Configuración" FontWeight="Bold"/>
                <Button Content="🔖" Command="{Binding OpenBookmarksCommand}" ToolTip="Marcadores" FontWeight="Bold"/>
                <Button Content="🕒" Command="{Binding OpenHistoryCommand}" ToolTip="Historial" FontWeight="Bold"/>
                <Button Content="⬇️" Command="{Binding OpenDownloadsCommand}" ToolTip="Descargas" FontWeight="Bold"/>
                <Button Content="🔑" Click="PasswordsButton_Click" ToolTip="Administrar contraseñas" FontWeight="Bold"/>
                <Button Content="🔌" Click="ExtensionsButton_Click" ToolTip="Extensiones" FontWeight="Bold"/>
                <Button Content="🖼️" Command="{Binding ScreenshotCommand}" ToolTip="Captura de pantalla" FontWeight="Bold"/>
                <Button Content="⚡" Click="PerformanceButton_Click" ToolTip="Rendimiento" FontWeight="Bold"/>
                <Button Content="🕵️" Click="NewIncognitoTabButton_Click" ToolTip="Nueva pestaña de incógnito" FontWeight="Bold"/>
                <Button Content="🎥" Click="PipButton_Click" ToolTip="Modo Picture-in-Picture" FontWeight="Bold"/>
                <Button Content="📄" Click="ReaderModeButton_Click" ToolTip="Modo lectura" FontWeight="Bold"/>
                <Button Content="🗣️" Click="ReadAloudButton_Click" ToolTip="Leer en voz alta" FontWeight="Bold"/>
                <Button Content="🌙" Click="ToggleDarkModeButton_Click" ToolTip="Alternar modo oscuro" FontWeight="Bold"/>
                <Button Content="⚡" Click="ToggleGeminiModeButton_Click" ToolTip="Modo Gemini" FontWeight="Bold"/>


                <TextBox x:Name="AddressBar"
                         Text="{Binding SelectedTabItem.AddressBarText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         KeyDown="AddressBar_KeyDown"
                         VerticalContentAlignment="Center"
                         HorizontalAlignment="Stretch"
                         Margin="5,0"
                         ContextMenu="{StaticResource AddressBarContextMenu}"
                         TextWrapping="Wrap"
                         AcceptsReturn="False"
                         ScrollViewer.CanContentScroll="True"
                         VerticalScrollBarVisibility="Auto"
                         HorizontalScrollBarVisibility="Auto">
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Width" Value="*"/> <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=StackPanel}, Path=Orientation}" Value="Horizontal">
                                    <Setter Property="Width" Value="*"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                
                <ContextMenu x:Key="AddressBarContextMenu">
                    <MenuItem Header="Cortar" Command="ApplicationCommands.Cut"/>
                    <MenuItem Header="Copiar" Command="ApplicationCommands.Copy"/>
                    <MenuItem Header="Pegar" Command="ApplicationCommands.Paste"/>
                </ContextMenu>
            </StackPanel>

            <Border x:Name="FindBar"
                    Grid.Row="2"
                    Visibility="{Binding IsFindBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Background="{DynamicResource BrowserBackgroundBrush}"
                    BorderBrush="{DynamicResource BrowserForegroundColor}"
                    BorderThickness="0,1,0,1"
                    Margin="0,0,0,5"
                    Padding="5">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock Text="Buscar:" VerticalAlignment="Center" Margin="0,0,5,0"
                               Foreground="{DynamicResource BrowserForegroundColor}"/>
                    <TextBox x:Name="FindTextBox"
                             Width="200"
                             VerticalContentAlignment="Center"
                             KeyDown="FindTextBox_KeyDown"
                             TextChanged="FindTextBox_TextChanged"
                             Margin="0,0,5,0"/>
                    <TextBlock x:Name="FindResultsTextBlock"
                               VerticalAlignment="Center"
                               Margin="0,0,10,0"
                               Foreground="{DynamicResource BrowserForegroundColor}"/>
                    <Button Content="▲"
                            Click="FindPreviousButton_Click"
                            Margin="0,0,2,0"
                            ToolTip="Buscar anterior"/>
                    <Button Content="▼"
                            Click="FindNextButton_Click"
                            Margin="0,0,5,0"
                            ToolTip="Buscar siguiente"/>
                    <Button Content="✖"
                            Click="CloseFindBarButton_Click"
                            ToolTip="Cerrar búsqueda"/>
                </StackPanel>
            </Border>

            <TabControl x:Name="BrowserTabs"
                        Grid.Row="3" Grid.Column="0"
                        ItemsSource="{Binding TabGroupManager.GetDefaultGroup().TabsInGroup}"
                        SelectedItem="{Binding SelectedTabItem, Mode=TwoWay}"
                        SelectionChanged="BrowserTabControl_SelectionChanged_Grouped"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                </TabControl>
        </Grid>
    </Border>
</Window>
